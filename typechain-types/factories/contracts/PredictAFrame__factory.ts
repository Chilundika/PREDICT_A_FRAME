/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  PredictAFrame,
  PredictAFrameInterface,
} from "../../contracts/PredictAFrame";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_usdcToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
    ],
    name: "MarketEventCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "predictionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "outcome",
        type: "bool",
      },
    ],
    name: "PredictionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "predictionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "outcome",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalRewards",
        type: "uint256",
      },
    ],
    name: "PredictionResolved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "predictionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RewardsDistributed",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_PREDICTION_AMOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_PREDICTION_AMOUNT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PLATFORM_FEE_PERCENTAGE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "addAllowedAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowedAddresses",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "predictionId",
        type: "uint256",
      },
    ],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "durationHours",
        type: "uint256",
      },
    ],
    name: "createMarketEvent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "eventPredictions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveEvents",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "resolved",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "outcome",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalPool",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "yesPool",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "noPool",
            type: "uint256",
          },
        ],
        internalType: "struct PredictAFrame.MarketEvent[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getContractBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
    ],
    name: "getEventPredictions",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
    ],
    name: "getMarketEvent",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "endTime",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "resolved",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "outcome",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "totalPool",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "yesPool",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "noPool",
            type: "uint256",
          },
        ],
        internalType: "struct PredictAFrame.MarketEvent",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "predictionId",
        type: "uint256",
      },
    ],
    name: "getPrediction",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "eventId",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "outcome",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "claimed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct PredictAFrame.Prediction",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getUSDCAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserPredictions",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "outcome",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "makePrediction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "marketEvents",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "resolved",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "outcome",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "totalPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "yesPool",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "noPool",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextEventId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nextPredictionId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "predictions",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "outcome",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "claimed",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "removeAllowedAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "eventId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "outcome",
        type: "bool",
      },
    ],
    name: "resolveMarketEvent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdcToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userPredictions",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604052600160065560016007553480156200001b57600080fd5b5060405162002302380380620023028339810160408190526200003e9162000123565b600160005533806200006a57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6200007581620000d1565b506001600160a01b031660805273a67323be0685019f6b7d2df308e17e3c00958b0560005260086020527f526a136b000b5b4a22958a6165a0250c29c1917bf052fe724fea7a77413d5224805460ff1916600117905562000155565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156200013657600080fd5b81516001600160a01b03811681146200014e57600080fd5b9392505050565b6080516121676200019b60003960008181610289015281816103b9015281816106ca015281816109cd015281816110900152818161132501526113b901526121676000f3fe608060405234801561001057600080fd5b50600436106101c35760003560e01c8063a94eea63116100f9578063db2e21bc11610097578063f6c3317911610071578063f6c3317914610481578063fb28106614610494578063fcc5cf44146104a0578063fe83bece146104a957600080fd5b8063db2e21bc14610453578063eff5e8621461045b578063f2fde38b1461046e57600080fd5b8063cbaf4af2116100d3578063cbaf4af2146103fd578063cf1fbac814610424578063d200632514610437578063d8d9292e1461044a57600080fd5b8063a94eea63146103a4578063bc06e81d146103b7578063c285f853146103dd57600080fd5b80636f9fb98a116101665780638bca2e54116101405780638bca2e54146103575780638d4d47fe1461036a5780638da5cb5b1461038a5780639f9d903a1461039b57600080fd5b80636f9fb98a14610334578063715018a61461033c57806381788e2b1461034457600080fd5b806315548232116101a257806315548232146102c35780633612280f146102d95780633c9d93b8146102ee5780634120657a1461030157600080fd5b80624fbbb0146101c85780630962ef791461026f57806311eac85514610284575b600080fd5b6102256101d6366004611b51565b6003602081905260009182526040909120805460018201546002830154938301546004840154600590940154929491936001600160a01b0390921692909160ff80821692610100909204169087565b6040805197885260208801969096526001600160a01b039094169486019490945260608501919091521515608084015290151560a083015260c082015260e0015b60405180910390f35b61028261027d366004611b51565b61051a565b005b6102ab7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610266565b6102cb600581565b604051908152602001610266565b6102e1610738565b6040516102669190611c1d565b6102826102fc366004611c9b565b61098c565b61032461030f366004611c9b565b60086020526000908152604090205460ff1681565b6040519015158152602001610266565b6102cb6109b5565b610282610a45565b610282610352366004611c9b565b610a59565b6102cb610365366004611ccc565b610a85565b61037d610378366004611b51565b610c10565b6040516102669190611d81565b6001546001600160a01b03166102ab565b6102cb60065481565b6102cb6103b2366004611d94565b610d52565b7f00000000000000000000000000000000000000000000000000000000000000006102ab565b6103f06103eb366004611c9b565b610d83565b6040516102669190611db6565b61041061040b366004611b51565b610def565b604051610266989796959493929190611dfa565b610282610432366004611e57565b610ec2565b6103f0610445366004611b51565b611274565b6102cb60075481565b610282611305565b610282610469366004611e8c565b6113e0565b61028261047c366004611c9b565b61157f565b6102cb61048f366004611eb8565b6115ba565b6102cb6402540be40081565b6102cb61271081565b6104bc6104b7366004611b51565b6115d6565b604051610266919081518152602080830151908201526040808301516001600160a01b0316908201526060808301519082015260808083015115159082015260a08083015115159082015260c0918201519181019190915260e00190565b6105226116f6565b600081815260036020526040902060028101546001600160a01b031633146105875760405162461bcd60e51b81526020600482015260136024820152722737ba103cb7bab910383932b234b1ba34b7b760691b60448201526064015b60405180910390fd5b6004810154610100900460ff16156105d35760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b604482015260640161057e565b60018101546000908152600260205260409020600381015460ff1661062f5760405162461bcd60e51b8152602060048201526012602482015271115d995b9d081b9bdd081c995cdbdb1d995960721b604482015260640161057e565b60048201546003820154610100900460ff9081161515911615151461068d5760405162461bcd60e51b815260206004820152601460248201527350726564696374696f6e207761732077726f6e6760601b604482015260640161057e565b60048201805461ff0019811661010017909155600183015460038401546000926106bb92919060ff16611720565b90506106f16001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633836118a1565b604051818152339085907f4cbfa67f54cf0255619787991cb52aa46c0d3ee5cfabb0abf659f2b310f474859060200160405180910390a35050506107356001600055565b50565b6060600060015b6006548110156107a15760008181526002602052604090206003015460ff1615801561077c57506000818152600260208190526040909120015442105b1561078f578161078b81611ef8565b9250505b8061079981611ef8565b91505061073f565b5060008167ffffffffffffffff8111156107bd576107bd611cb6565b6040519080825280602002602001820160405280156107f657816020015b6107e3611b08565b8152602001906001900390816107db5790505b509050600060015b6006548110156109835760008181526002602052604090206003015460ff1615801561083b57506000818152600260208190526040909120015442105b156109715760026000828152602001908152602001600020604051806101000160405290816000820154815260200160018201805461087990611f11565b80601f01602080910402602001604051908101604052809291908181526020018280546108a590611f11565b80156108f25780601f106108c7576101008083540402835291602001916108f2565b820191906000526020600020905b8154815290600101906020018083116108d557829003601f168201915b505050918352505060028201546020820152600382015460ff80821615156040840152610100909104161515606082015260048201546080820152600582015460a082015260069091015460c090910152835184908490811061095757610957611f45565b6020026020010181905250818061096d90611ef8565b9250505b8061097b81611ef8565b9150506107fe565b50909392505050565b610994611900565b6001600160a01b03166000908152600860205260409020805460ff19169055565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610a1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a409190611f5b565b905090565b610a4d611900565b610a57600061192d565b565b610a61611900565b6001600160a01b03166000908152600860205260409020805460ff19166001179055565b3360009081526008602052604081205460ff16610add5760405162461bcd60e51b81526020600482015260166024820152751059191c995cdcc81b9bdd08185d5d1a1bdc9a5e995960521b604482015260640161057e565b6006805460009182610aee83611ef8565b9091555090506000610b0284610e10611f74565b610b0c9042611f8b565b604080516101008101825284815260208082018981528284018590526000606084018190526080840181905260a0840181905260c0840181905260e084018190528781526002909252929020815181559151929350916001820190610b719082611fec565b5060408281015160028301556060830151600383018054608086015115156101000261ff00199315159390931661ffff199091161791909117905560a0830151600483015560c0830151600583015560e0909201516006909101555182907fc20f600d9b09885fb8b34def9caa2c459e5f5cb5ee517d2fae02017dba13455890610bfe90889085906120ac565b60405180910390a25090505b92915050565b610c18611b08565b81600081118015610c2a575060065481105b610c465760405162461bcd60e51b815260040161057e906120ce565b600260008481526020019081526020016000206040518061010001604052908160008201548152602001600182018054610c7f90611f11565b80601f0160208091040260200160405190810160405280929190818152602001828054610cab90611f11565b8015610cf85780601f10610ccd57610100808354040283529160200191610cf8565b820191906000526020600020905b815481529060010190602001808311610cdb57829003601f168201915b505050918352505060028201546020820152600382015460ff80821615156040840152610100909104161515606082015260048201546080820152600582015460a082015260069091015460c09091015291505b50919050565b60056020528160005260406000208181548110610d6e57600080fd5b90600052602060002001600091509150505481565b6001600160a01b038116600090815260046020908152604091829020805483518184028101840190945280845260609392830182828015610de357602002820191906000526020600020905b815481526020019060010190808311610dcf575b50505050509050919050565b60026020526000908152604090208054600182018054919291610e1190611f11565b80601f0160208091040260200160405190810160405280929190818152602001828054610e3d90611f11565b8015610e8a5780601f10610e5f57610100808354040283529160200191610e8a565b820191906000526020600020905b815481529060010190602001808311610e6d57829003601f168201915b50505060028401546003850154600486015460058701546006909701549596929560ff80841696506101009093049092169350919088565b610eca6116f6565b82600081118015610edc575060065481105b610ef85760405162461bcd60e51b815260040161057e906120ce565b600084815260026020526040902060030154849060ff1615610f555760405162461bcd60e51b8152602060048201526016602482015275115d995b9d08185b1c9958591e481c995cdbdb1d995960521b604482015260640161057e565b600081815260026020819052604090912001544210610fa85760405162461bcd60e51b815260206004820152600f60248201526e115d995b9d081a185cc8195b991959608a1b604482015260640161057e565b82612710811015610fec5760405162461bcd60e51b815260206004820152600e60248201526d416d6f756e7420746f6f206c6f7760901b604482015260640161057e565b6402540be4008111156110335760405162461bcd60e51b815260206004820152600f60248201526e082dadeeadce840e8dede40d0d2ced608b1b604482015260640161057e565b600084116110835760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e2030000000604482015260640161057e565b6110b86001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308761197f565b60078054600091826110c983611ef8565b909155506040805160e08101825282815260208082018b815233838501818152606085018c81528d151560808701908152600060a088018181524260c08a019081528b83526003808a528b84209a518b5597516001808c019190915595516002808c0180546001600160a01b0319166001600160a01b03909316929092179091559451978a019790975591516004808a018054945161ffff1990951692151561ff0019169290921761010094151594909402939093179055945160059788015592845282855286842080548084018255908552858520018890558e8452948452858320805491820181558352838320018690558c825292909152918220908101805493945090928892906111de908490611f8b565b9091555050861561120857858160050160008282546111fd9190611f8b565b909155506112229050565b8581600601600082825461121c9190611f8b565b90915550505b604080518781528815156020820152339184917f9b51a1c5098265b34bc62718238eab3a5b9b7e7dcb7984fc2c9c65811953902a910160405180910390a3505050505061126f6001600055565b505050565b606081600081118015611288575060065481105b6112a45760405162461bcd60e51b815260040161057e906120ce565b600083815260056020908152604091829020805483518184028101840190945280845290918301828280156112f857602002820191906000526020600020905b8154815260200190600101908083116112e4575b5050505050915050919050565b61130d611900565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015611374573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113989190611f5b565b90506107356113af6001546001600160a01b031690565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690836118a1565b3360009081526008602052604090205460ff166114385760405162461bcd60e51b81526020600482015260166024820152751059191c995cdcc81b9bdd08185d5d1a1bdc9a5e995960521b604482015260640161057e565b8160008111801561144a575060065481105b6114665760405162461bcd60e51b815260040161057e906120ce565b6000838152600260205260409020600381015460ff16156114c25760405162461bcd60e51b8152602060048201526016602482015275115d995b9d08185b1c9958591e481c995cdbdb1d995960521b604482015260640161057e565b806002015442101561150c5760405162461bcd60e51b8152602060048201526013602482015272115d995b9d081b9bdd081e595d08195b991959606a1b604482015260640161057e565b6003810180548415156101000261ffff1990911617600117905561153084846119be565b837ff1f57a369cc16dcb3992480925585784db8819cc10fca5a7b878a9f7aff37b3f8483600401546040516115719291909115158252602082015260400190565b60405180910390a250505050565b611587611900565b6001600160a01b0381166115b157604051631e4fbdf760e01b81526000600482015260240161057e565b6107358161192d565b60046020528160005260406000208181548110610d6e57600080fd5b6116236040518060e00160405280600081526020016000815260200160006001600160a01b0316815260200160008152602001600015158152602001600015158152602001600081525090565b600082118015611634575060075482105b6116805760405162461bcd60e51b815260206004820152601960248201527f50726564696374696f6e20646f6573206e6f7420657869737400000000000000604482015260640161057e565b50600090815260036020818152604092839020835160e0810185528154815260018201549281019290925260028101546001600160a01b031693820193909352908201546060820152600482015460ff8082161515608084015261010090910416151560a082015260059091015460c082015290565b60026000540361171957604051633ee5aeb560e01b815260040160405180910390fd5b6002600055565b6000838152600260209081526040808320815161010081019092528054825260018101805485948401919061175490611f11565b80601f016020809104026020016040519081016040528092919081815260200182805461178090611f11565b80156117cd5780601f106117a2576101008083540402835291602001916117cd565b820191906000526020600020905b8154815290600101906020018083116117b057829003601f168201915b505050918352505060028201546020820152600382015460ff80821615156040840152610100909104161515606082015260048201546080820152600582015460a082015260069091015460c0909101529050600083611831578160e00151611837565b8160c001515b90508060000361184c5760009250505061189a565b6000818360a001518761185f9190611f74565b61186991906120fc565b90506000606461187a600584611f74565b61188491906120fc565b90506000611892828461211e565b955050505050505b9392505050565b6040516001600160a01b0383811660248301526044820183905261126f91859182169063a9059cbb906064015b604051602081830303815290604052915060e01b6020820180516001600160e01b038381831617835250505050611a97565b6001546001600160a01b03163314610a575760405163118cdaa760e01b815233600482015260240161057e565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6040516001600160a01b0384811660248301528381166044830152606482018390526119b89186918216906323b872dd906084016118ce565b50505050565b600082815260056020908152604080832080548251818502810185019093528083529192909190830182828015611a1457602002820191906000526020600020905b815481526020019060010190808311611a00575b5050505050905060005b81518110156119b857600060036000848481518110611a3f57611a3f611f45565b6020026020010151815260200190815260200160002090508315158160040160009054906101000a900460ff16151503611a8457611a8285826003015486611720565b505b5080611a8f81611ef8565b915050611a1e565b600080602060008451602086016000885af180611aba576040513d6000823e3d81fd5b50506000513d91508115611ad2578060011415611adf565b6001600160a01b0384163b155b156119b857604051635274afe760e01b81526001600160a01b038516600482015260240161057e565b6040518061010001604052806000815260200160608152602001600081526020016000151581526020016000151581526020016000815260200160008152602001600081525090565b600060208284031215611b6357600080fd5b5035919050565b6000815180845260005b81811015611b9057602081850181015186830182015201611b74565b506000602082860101526020601f19601f83011685010191505092915050565b6000610100825184526020830151816020860152611bd082860182611b6a565b9150506040830151604085015260608301511515606085015260808301511515608085015260a083015160a085015260c083015160c085015260e083015160e08501528091505092915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015611c7257603f19888603018452611c60858351611bb0565b94509285019290850190600101611c44565b5092979650505050505050565b80356001600160a01b0381168114611c9657600080fd5b919050565b600060208284031215611cad57600080fd5b61189a82611c7f565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215611cdf57600080fd5b823567ffffffffffffffff80821115611cf757600080fd5b818501915085601f830112611d0b57600080fd5b813581811115611d1d57611d1d611cb6565b604051601f8201601f19908116603f01168101908382118183101715611d4557611d45611cb6565b81604052828152886020848701011115611d5e57600080fd5b826020860160208301376000602093820184015298969091013596505050505050565b60208152600061189a6020830184611bb0565b60008060408385031215611da757600080fd5b50508035926020909101359150565b6020808252825182820181905260009190848201906040850190845b81811015611dee57835183529284019291840191600101611dd2565b50909695505050505050565b60006101008a8352806020840152611e148184018b611b6a565b604084019990995250509415156060860152921515608085015260a084019190915260c083015260e09091015292915050565b80358015158114611c9657600080fd5b600080600060608486031215611e6c57600080fd5b83359250611e7c60208501611e47565b9150604084013590509250925092565b60008060408385031215611e9f57600080fd5b82359150611eaf60208401611e47565b90509250929050565b60008060408385031215611ecb57600080fd5b611ed483611c7f565b946020939093013593505050565b634e487b7160e01b600052601160045260246000fd5b600060018201611f0a57611f0a611ee2565b5060010190565b600181811c90821680611f2557607f821691505b602082108103610d4c57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060208284031215611f6d57600080fd5b5051919050565b8082028115828204841417610c0a57610c0a611ee2565b80820180821115610c0a57610c0a611ee2565b601f82111561126f57600081815260208120601f850160051c81016020861015611fc55750805b601f850160051c820191505b81811015611fe457828155600101611fd1565b505050505050565b815167ffffffffffffffff81111561200657612006611cb6565b61201a816120148454611f11565b84611f9e565b602080601f83116001811461204f57600084156120375750858301515b600019600386901b1c1916600185901b178555611fe4565b600085815260208120601f198616915b8281101561207e5788860151825594840194600190910190840161205f565b508582101561209c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6040815260006120bf6040830185611b6a565b90508260208301529392505050565b602080825260149082015273115d995b9d08191bd95cc81b9bdd08195e1a5cdd60621b604082015260600190565b60008261211957634e487b7160e01b600052601260045260246000fd5b500490565b81810381811115610c0a57610c0a611ee256fea26469706673582212203336d3971fbc7b55642bf8f57f028c82ce232c92ac6523a89450c9c4472143be64736f6c63430008140033";

type PredictAFrameConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PredictAFrameConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PredictAFrame__factory extends ContractFactory {
  constructor(...args: PredictAFrameConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _usdcToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_usdcToken, overrides || {});
  }
  override deploy(
    _usdcToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_usdcToken, overrides || {}) as Promise<
      PredictAFrame & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PredictAFrame__factory {
    return super.connect(runner) as PredictAFrame__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PredictAFrameInterface {
    return new Interface(_abi) as PredictAFrameInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PredictAFrame {
    return new Contract(address, _abi, runner) as unknown as PredictAFrame;
  }
}
